#!/usr/bin/env php
<?php

include(__DIR__ . '/../webdata/init.inc.php');

function error($message)
{
    error_log($message);
}

function main()
{
    if (!getenv('SSH_ORIGINAL_COMMAND')) {
        return error('There is no SSH_ORIGINAL_COMMAND env');
    }

    $command = getenv('SSH_ORIGINAL_COMMAND');
    list($method) = explode(' ', $command, 2);
    switch ($method) {
    case 'init': // init $nodes_count
        list(, $nodes_count) = explode(' ', $command, 2);
        $nodes_count = intval($nodes_count);
        if (!$nodes_count) {
            die("invalid nodes_count\n");
        }

        $view = new Pix_Partial(__DIR__ . '/../webdata/views');
        if (!file_exists("/srv/deploy/etc")) {
            mkdir("/srv/deploy/etc");
        }
        if (!file_exists("/srv/deploy/logs")) {
            mkdir("/srv/deploy/logs");
        }
        $vhost_conf = 'DirectoryIndex index.php index.html index.htm' . PHP_EOL;
        $vhost_conf .= 'AddHandler php-fastcgi .php' . PHP_EOL;
        $vhost_conf .= '<Directory /srv/deploy>' . PHP_EOL;
        $vhost_conf .= 'AllowOverride All' . PHP_EOL;
        $vhost_conf .= '</Directory>' . PHP_EOL;
        $vhost_conf .= PHP_EOL;
        for ($i = 1; $i <= $nodes_count; $i ++) {
            file_put_contents("/srv/deploy/etc/{$i}.conf", $view->partial('config/php-fpm.conf.phtml', array('id' => $i)));
            if (!file_exists("/srv/deploy/{$i}")) {
                mkdir("/srv/deploy/{$i}");
            }
            if (!file_exists("/srv/deploy/{$i}/srv")) {
                mkdir("/srv/deploy/{$i}/srv");
            }
            if (!file_exists("/srv/deploy/logs/{$i}")) {
                mkdir("/srv/deploy/logs/{$i}");
            }
            if (!file_exists("/srv/deploy/{$i}/srv/web")) {
                mkdir("/srv/deploy/{$i}/srv/web");
            }
            if (!file_exists("/srv/deploy/{$i}/srv/deploy")) {
                mkdir("/srv/deploy/{$i}/srv/deploy");
            }
            if (file_exists("/srv/deploy/{$i}/srv/deploy/{$i}")) {
                unlink("/srv/deploy/{$i}/srv/deploy/{$i}");
            }
            symlink("../..", "/srv/deploy/{$i}/srv/deploy/{$i}");
            $vhost_conf .= $view->partial('config/apache-vhost.conf.phtml', array('port' => 20000 + $i, 'id' => $i));
        }
        file_put_contents("/srv/deploy/nodes.conf", $vhost_conf);
        break;

    case 'clone':
        list(, $project, $id) = explode(' ', getenv('SSH_ORIGINAL_COMMAND'));
        if (!$id) {
            die("invalid $id");
        }
        exec("rm -rf /srv/deploy/{$id}/srv/web/*");
        exec("git clone git@git.hisoku.ronny.tw:{$project}.git /srv/deploy/{$id}/srv/web/");
        break;
    }
    return;
}

main();
