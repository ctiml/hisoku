#!/usr/bin/env php
<?php

include(__DIR__ . '/../webdata/init.inc.php');

$fp = fopen('php://stdin', 'r');
$content = '';
while (false !== ($line = fgets($fp))) {
    $content .= $line;
}
list($oldrev, $newrev, $refname) = explode(' ', trim($content));

// {id}.git
$path = basename(getcwd());
if (!preg_match('#^(\d+)\.git$#', $path, $matches)) {
    // FIXME
    error_log('invalid path name: ' . $path);
    exit;
}
if (!$project = Project::find(intval($matches[1]))) {
    // FIXME
    error_log('invalid project id: ' . $matches[1]);
    exit;
}

// 處理先下載好各 repository 需要的內容
if ('python26' == $project->getTemplate()) {
    // Ex: git ls-tree a9b6e64f0b4c61901287ab17e53c4040225af496 requirements.txt
    $ls_tree_cmd = 'git ls-tree ' . escapeshellarg($newrev) . ' requirements.txt';
    $ls_result = trim(`$ls_tree_cmd`);
    // Got '100644 blob 433ee4e878d82d375ea2311dcd4f0046a8eb12b6    requirements.txt'
    list($perm, $type, $object_id, $file) = preg_split('/\s+/', trim($ls_result));
    if ($type == 'blob' and $file == 'requirements.txt') {
        // Ex: git cat-file -p 433ee4e878d82d375ea2311dcd4f0046a8eb12b6
        $cat_file_cmd = 'git cat-file -p ' . escapeshellarg($object_id);
        $file_content = trim(`$cat_file_cmd`);

        $fp = tmpfile();
        fputs($fp, $file_content);
        $meta_data = stream_get_meta_data($fp);
        system('/srv/code/hisoku/scripts/python-downloader.php ' . escapeshellarg($meta_data['uri']));
    }
}

// TODO: deploy to webnode
$project->update(array('commit' => $newrev));

error_log('deploy finished. visit http://' . $project->getFirstDomain() . '/');
